cacheSolve <- function(x, ...){
inv <- x$getInverse()
if(!is.null(inv)){
message("getting cached data")
return(inv)
}
mat <- x$get()
inv <- solve(mat, ...)
x$setInverse(inv)
inv
}
inv
cacheSolve <- function(x, ...){
inv <- x$getInverse()
if(!is.null(inv)){
message("getting cached data")
return(inv)
}
mat <- x$get()
inv <- solve(mat, ...)
x$setInverse(inv)
inv
}
source("PeerAssignment.R")
source("PeerAssignment.R")
source("makeCacheMatrix.R")
source('C:/Users/User/Desktop/makeCacheMatrix.R')
getwd()
setwd("C:/Users/User/Desktop")
source("makeCacheMatrix.R")
pmatrix <- makeCacheMatrix(matrix (1:16, nrow=4, ncol=4))
pmatrix$get()
pmatrix$getInverse()
pmatrix <- makeCacheMatrix(matrix (1:4, nrow=2, ncol=2))
pmatrix$get()
pmatrix$getInverse()
cacheSolve(pmatrix)
